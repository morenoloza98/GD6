{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/Documents/Escuela/6\\xBA Semestre/Lab Desarrollo de Apps Web/Workspace-node/GD6/client/src/components/todos/TodoList.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: '',\n      description: '',\n      tasks: []\n    };\n\n    this.getList = () => {\n      axios.get('/tasks/all').then(res => {\n        this.setState({\n          tasks: res.data.data\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.addTask = description => {\n      return axios.post('/tasks/add', {\n        description: description\n      }).then(res => {\n        console.log(res);\n      }).catch(err => console.log(err));\n    };\n\n    this.deleteTask = id => {\n      axios.delete(`/tasks/${id}/delete`).then(res => {\n        console.log(res);\n      }).catch(err => console.log(err));\n    };\n\n    this.markAsDone = id => {\n      axios.put(`/tasks/${id}/done`, {\n        status: 'done'\n      }).then(res => {\n        console.log(res);\n      }).catch(err => console.log(err));\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.addTask(this.state.description).then(() => {\n        this.getList();\n      });\n      this.setState({\n        description: ''\n      });\n    };\n\n    this.onUpdate = (value, e) => {\n      e.preventDefault();\n      this.markAsDone(value);\n      let data = [...this.state.tasks];\n      data.filter(function (task, index) {\n        if (task.id === value) {\n          task.status = 'done';\n        }\n\n        return true;\n      });\n      this.setState({\n        tasks: [...data]\n      });\n    };\n\n    this.onDelete = (value, e) => {\n      e.preventDefault();\n      this.deleteTask(value);\n      let data = [...this.state.tasks];\n      data.filter(function (task, index) {\n        if (task.id === value) {\n          data.splice(index, 1);\n        }\n\n        return true;\n      });\n      this.setState({\n        tasks: [...data]\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"TODO\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description || '',\n      onChange: this.onChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.onSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, this.state.tasks.map((todo, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        style: {\n          backgroundColor: todo.status == 'pending' ? 'green' : 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, i), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, todo.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        href: \"\",\n        onClick: this.onUpdate.bind(this, todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 33\n        }\n      }, \"Terminado\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        href: \"\",\n        onClick: this.onDelete.bind(this, todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }\n      }, \"Delete\")));\n    })))));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/Alex/Documents/Escuela/6ยบ Semestre/Lab Desarrollo de Apps Web/Workspace-node/GD6/client/src/components/todos/TodoList.js"],"names":["React","Component","useState","axios","TodoList","state","id","description","tasks","getList","get","then","res","setState","data","catch","err","console","log","addTask","post","deleteTask","delete","markAsDone","put","status","onChange","e","target","name","value","onSubmit","preventDefault","onUpdate","filter","task","index","onDelete","splice","componentDidMount","render","bind","map","todo","i","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport axios from 'axios';\n\nclass TodoList extends Component {\n    state = {\n        id: '',\n        description: '',\n        tasks: []\n    }\n\n    getList = () => {\n        axios.get('/tasks/all')\n            .then(res => {\n            this.setState({ tasks: res.data.data });\n            })\n            .catch(err => console.log(err));\n    }\n\n    addTask = (description) => {\n        return axios.post('/tasks/add', {\n            description: description\n        })\n        .then(res => {\n            console.log(res);\n        })\n        .catch(err => console.log(err));\n    }\n\n    deleteTask = (id) => {\n    axios.delete(`/tasks/${id}/delete`)\n        .then(res => {\n        console.log(res);\n        })\n        .catch(err => console.log(err));\n    }\n\n    markAsDone = (id) => {\n    axios.put(`/tasks/${id}/done`, {\n        status: 'done'\n    })\n        .then(res => {\n        console.log(res);\n        })\n        .catch(err => console.log(err));\n    }\n\n    componentDidMount(){\n        this.getList();\n    }\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onSubmit = e => {\n        e.preventDefault()\n        this.addTask(this.state.description).then(() => {\n            this.getList()\n        })\n        this.setState({\n            description: ''\n        })\n    }\n\n    onUpdate = (value, e) => {\n        e.preventDefault()\n        this.markAsDone(value)\n\n        let data = [...this.state.tasks]\n        data.filter(function(task, index) {\n            if(task.id === value){\n                task.status = 'done'\n            }\n            return true\n        })\n        this.setState({ tasks: [...data]})\n    }\n\n    onDelete = (value, e) => {\n        e.preventDefault()\n        this.deleteTask(value)\n\n        let data = [...this.state.tasks]\n        data.filter(function(task, index) {\n            if(task.id === value){\n                data.splice(index, 1)\n            }\n            return true\n        })\n        this.setState({ tasks: [...data]})\n    }\n\n    render(){    \n        return (\n            <>\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <div>\n                        <label for=\"description\">TODO</label>\n                        <input \n                            type=\"text\" \n                            id=\"description\" \n                            name=\"description\"\n                            value={this.state.description || ''}\n                            onChange={this.onChange.bind(this)}\n                        />\n                        <button\n                            type=\"submit\"\n                            onClick={this.onSubmit.bind(this)}>\n                                Submit\n                        </button>\n                    </div>\n                </form>\n            </div>\n            <div>\n                <table border=\"1\">\n                <thead>\n                    <th>#</th>\n                    <th>Task</th>\n                    <th></th>\n                </thead>\n                <tbody>\n                    {this.state.tasks.map((todo, i) => {\n                    return (\n                        <tr key={i} style={{backgroundColor: todo.status == 'pending' ? 'green' : 'grey'}}>\n                            <td>{i}</td>\n                            <td>{todo.description}</td>\n                            <td>\n                                <button\n                                    href=\"\"\n                                    onClick={this.onUpdate.bind(this, todo.id)}\n                                >\n                                        Terminado\n                                </button>\n                            </td>\n                            <td>\n                                <button\n                                    href=\"\"\n                                    onClick={this.onDelete.bind(\n                                        this,\n                                        todo.id\n                                    )}\n                                >\n                                        Delete\n                                </button>\n                            </td>\n                        {/* <td>\n                            {todo.status == 'pending' && (\n                            <input type=\"button\" value=\"terminado?\" onClick={(event) => markAsDone(event, this.id)}/>\n                            )}\n                        </td> */}\n                        </tr>\n                    )\n                    })}\n                </tbody>\n                </table>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}