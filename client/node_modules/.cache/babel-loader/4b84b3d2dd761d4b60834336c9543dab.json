{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/Documents/Escuela/6\\xBA Semestre/Lab Desarrollo de Apps Web/Workspace-node/GD6/client/src/components/todos/TodoList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n\n    this.addTask = description => {\n      axios.post('/tasks/add', {\n        description: description\n      }).then(res => {\n        console.log(res);\n      }).catch(err => console.log(err));\n    };\n\n    this.deleteTask = id => {\n      axios.delete(`/tasks/${id}/delete`).then(res => {\n        console.log(res);\n      }).catch(err => console.log(err));\n    };\n\n    this.markAsDone = id => {\n      axios.put(`/tasks/${id}/done`, {\n        status: 'done'\n      }).then(res => {\n        console.log(res);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/tasks/all').then(res => {\n      this.setState({\n        tasks: res.data.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  // const handleMarkAsDone = (event, index) => {\n  //     markAsDone(index);\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, this.state.tasks.map((todo, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        style: {\n          backgroundColor: todo.status == 'pending' ? 'green' : 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, \"#\", i), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, todo.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, todo.status == 'pending' && /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        value: \"terminado?\",\n        onClick: event => handleMarkAsDone(event, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      })));\n    })));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/Alex/Documents/Escuela/6ยบ Semestre/Lab Desarrollo de Apps Web/Workspace-node/GD6/client/src/components/todos/TodoList.js"],"names":["React","Component","axios","TodoList","state","tasks","addTask","description","post","then","res","console","log","catch","err","deleteTask","id","delete","markAsDone","put","status","componentDidMount","get","setState","data","render","map","todo","i","backgroundColor","event","handleMarkAsDone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass TodoList extends Component {\n    state = {\n        tasks: []\n    }\n\n  componentDidMount(){\n    axios.get('/tasks/all')\n      .then(res => {\n        this.setState({ tasks: res.data.data });\n      })\n      .catch(err => console.log(err));\n  }\n\n  addTask = (description) => {\n    axios.post('/tasks/add', {\n      description: description\n    })\n    .then(res => {\n      console.log(res);\n    })\n    .catch(err => console.log(err));\n  }\n\n  deleteTask = (id) => {\n    axios.delete(`/tasks/${id}/delete`)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => console.log(err));\n  }\n\n  markAsDone = (id) => {\n    axios.put(`/tasks/${id}/done`, {\n      status: 'done'\n    })\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => console.log(err));\n  }\n\n\n    // const handleMarkAsDone = (event, index) => {\n    //     markAsDone(index);\n    // }\n\n    render(){    \n        return (\n            <table border=\"1\">\n            <thead>\n                <th>#</th>\n                <th>Task</th>\n                <th></th>\n            </thead>\n            <tbody>\n                {this.state.tasks.map((todo, i) => {\n                return (\n                    <tr key={i} style={{backgroundColor: todo.status == 'pending' ? 'green' : 'grey'}}>\n                    <td>#{i}</td>\n                    <td>{todo.description}</td>\n                    <td>\n                        {todo.status == 'pending' && (\n                        <input type=\"button\" value=\"terminado?\" onClick={(event) => handleMarkAsDone(event, i)}/>\n                        )}\n                    </td>\n                    </tr>\n                )\n                })}\n            </tbody>\n            </table>\n        );\n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}